configurations {
    jaxb
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

// tag::wsdl[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "  http://34.242.133.196:8080/ws/fibonacci.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema,
                    package: "hello.wsdl") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::wsdl[]

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.ws:spring-ws-core")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
    compile group: 'javax.xml', name: 'webservices-api', version: '@metro.version@'
    compile group: 'org.springframework.ws', name: 'spring-ws', version: '3.0.4.RELEASE', ext: 'pom'
    compile group: 'javax.xml.soap', name: 'saaj-api', version: '1.3.5'
      compile group: 'org.jvnet.mimepull', name: 'mimepull', version: '1.9.3'
    compile group: 'org.springframework', name: 'spring-oxm', version: '3.0.0.RELEASE'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.4.0-b180830.0438'
// https://mvnrepository.com/artifact/com.sun.istack/istack-commons-runtime
    compile group: 'com.sun.istack', name: 'istack-commons-runtime', version: '2.2'

    compile group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '1.5.0'

    implementation('org.springframework.boot:spring-boot-starter-websocket')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compile("org.springframework.ws:spring-ws-core")
    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
}

bootJar {
    baseName = 'gs-consuming-web-service'
    version =  '0.1.0'

    from genJaxb.classesDir
}


task afterEclipseImport {
    dependsOn genJaxb
}